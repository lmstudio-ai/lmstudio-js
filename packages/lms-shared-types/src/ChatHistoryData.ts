import { z } from "zod";
import { type FileType, fileTypeSchema } from "./files/FileType";

/**
 * @public
 */
export interface ChatMessagePartTextData {
  type: "text";
  text: string;
}
export const chatMessagePartTextDataSchema = z.object({
  type: z.literal("text"),
  text: z.string(),
});

/**
 * @public
 */
export interface ChatMessagePartFileData {
  type: "file";
  /**
   * Original file name that is uploaded.
   */
  name: string;
  /**
   * Internal identifier for the file. Autogenerated, and is unique.
   */
  identifier: string;
  /**
   * Size of the file in bytes.
   */
  sizeBytes: number;
  /**
   * Type of the file.
   */
  fileType: FileType;
}
export const chatMessagePartFileDataSchema = z.object({
  type: z.literal("file"),
  name: z.string(),
  identifier: z.string(),
  sizeBytes: z.number(),
  fileType: fileTypeSchema,
});

/**
 * @public
 */
export interface ChatMessagePartToolCallData {
  type: "toolCall";
  /**
   * Tool calls requested
   */
  toolCalls: Array<Record<string, any>>;
}
export const chatMessagePartToolCallDataSchema = z.object({
  type: z.literal("toolCall"),
  toolCalls: z.array(z.record(z.any())),
});

/**
 * @public
 */
export interface ChatMessagePartToolCallResultData {
  type: "toolCallResult";
  /**
   * Result of a tool call
   */
  content: Record<string, any>;
  /**
   * The tool call ID that this result is for
   */
  toolCallId?: string;
}
export const chatMessagePartToolCallResultDataSchema = z.object({
  type: z.literal("toolCallResult"),
  content: z.record(z.any()),
  toolCallId: z.string().optional(),
});

/**
 * @public
 */
export type ChatMessagePartData =
  | ChatMessagePartTextData
  | ChatMessagePartFileData
  | ChatMessagePartToolCallData
  | ChatMessagePartToolCallResultData;
export const chatMessagePartDataSchema = z.discriminatedUnion("type", [
  chatMessagePartTextDataSchema,
  chatMessagePartFileDataSchema,
  chatMessagePartToolCallDataSchema,
  chatMessagePartToolCallResultDataSchema,
]);

/**
 * @public
 */
export type ChatMessageRoleData = "assistant" | "user" | "system" | "tool";
export const chatMessageRoleDataSchema = z.enum(["assistant", "user", "system", "tool"]);

/**
 * @public
 */
export interface ChatMessageData {
  role: ChatMessageRoleData;
  content: Array<ChatMessagePartData>;
}
export const chatMessageDataSchema = z.object({
  role: chatMessageRoleDataSchema,
  content: z.array(chatMessagePartDataSchema),
});

/**
 * @public
 */
export interface ChatHistoryData {
  messages: Array<ChatMessageData>;
}
export const chatHistoryDataSchema = z.object({
  messages: z.array(chatMessageDataSchema),
});
